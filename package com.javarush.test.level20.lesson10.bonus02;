package com.javarush.test.level20.lesson10.bonus02;
import java.util.ArrayList;

/* Алгоритмы-прямоугольники
1. Дан двумерный массив N*N, который содержит несколько прямоугольников.
2. Различные прямоугольники не соприкасаются и не накладываются.
3. Внутри прямоугольник весь заполнен 1.
4. В массиве:
4.1) a[i, j] = 1, если элемент (i, j) принадлежит какому-либо прямоугольнику
4.2) a[i, j] = 0, в противном случае
5. getRectangleCount должен возвращать количество прямоугольников.
6. Метод main не участвует в тестировании
*/
public class Solution {
    public static void main(String[] args) {
        byte[][] a = new byte[][]{
                {1, 1, 0, 1},
                {1, 1, 0, 0},
                {1, 1, 0, 1},
                {1, 1, 0, 0},
                {0, 0, 0, 1,}
        };
        int count = getRectangleCount(a);
        System.out.println("count = " + count + ". Должно быть 2");
    }

    public static int getRectangleCount(byte[][] a) {
        ArrayList<String> arrayCoord = new ArrayList<>();//в листе будут хранится координаты
        int count=0;
        int razmerI = a.length;
        int razmerJ = a[0].length;
        for (int i = 0; i < razmerI; i++) {
            for (int j = 0; j < razmerJ; j++) {         // перебор массива
                if ((a[i][j] == 1) & !arrayCoord.contains(i + " " + j)) {   //если координаты нет в листе
                    count++;                                                //+1 к результату
                    for (int k = i; k <razmerI ; k++) {                     //цикл занесения координат в лист
                        for (int l = j; l <razmerJ ; l++) {
                            if (a[k][l]==1){
                                arrayCoord.add(k + " " + l);
                                System.out.println(k + " " + l);
                            }else break;
                        }
                        if (a[k][j]!=1){break;}
                    }
                }
            }
        }
        return count;
    }
}
